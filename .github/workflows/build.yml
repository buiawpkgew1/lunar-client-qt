name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

env:
  BUILD_TYPE: Release

jobs:
  build_windows:
    name: "Windows Build"

    runs-on: windows-2022

    steps:
    - uses: actions/checkout@v2
        
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.15.2'
        host: 'windows'
        target: 'desktop'
        arch: 'win64_mingw81'
        tools: 'tools_mingw,8.1.0-1-202004170606,qt.tools.win64_mingw810'
      
    - name: Configure CMake
      run: cmake . -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -G "MinGW Makefiles"

    - name: Build
      run: cmake --build . --config ${{env.BUILD_TYPE}}
            
    - name: Package Dependencies
      shell: bash
      run: |
        mkdir with_deps
        mv lunar-client-qt.exe with_deps/
        PATH="$IQTA_TOOLS/mingw810_64/bin":$PATH windeployqt with_deps/ --compiler-runtime --no-angle --no-opengl-sw --no-virtualkeyboard --no-webkit2 --no-system-d3d-compiler --no-translations --no-quick-import  
    - name: Upload Artifiact
      uses: actions/upload-artifact@v2
      with:
        name: windows
        path: ./with_deps
        
  build_mac:
    name: "MacOS Build"
    runs-on: macos-latest
    
    steps:
      - uses: actions/checkout@v2
      
      - name: Install Qt
        uses: jurplel/install-qt-action@v2.14.0
        with:
          version: '6.2.2'
          host: 'mac'
          target: 'desktop'
          arch: 'clang_64'
        
      - name: Configure CMake
        run: cmake . -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        run: make
        
      - name: Package Dependencies
        run: |
          macdeployqt lunar-client-qt.app
          
      - name: Compress into tar
        run: |
          tar -czvf mac.tar.gz lunar-client-qt.app
          
      - uses: actions/upload-artifact@v2
        with:
          name: mac
          path: ./mac.tar.gz
          
  arch_build:
    name: "Arch Linux Build"
    
    runs-on: ubuntu-latest
    container: archlinux:latest
    
    steps: 
      - uses: actions/checkout@v2

      - name: Install Packages
        run: |
          pacman -Syu --noconfirm qt6-base qt6-svg cmake base-devel
          
      - name: Configure CMake
        run: cmake . -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
       
      - name: Build
        run: make
        
      - uses: actions/upload-artifact@v2
        with:
          name: linux
          path: ./lunar-client-qt
  
  ubuntu_build:
    name: "Ubuntu Linux Build"
    
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          install-deps: 'true'
          modules: 'qtwidget qtgui qtsvg qtnetwork'
          setup-python: 'false'
        
      - name: Install linuxdeployqt
        run: |
          curl -L -A "Internet Explorer" -o linuxdeployqt.AppImage https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
          chmod a+x ./linuxdeployqt.AppImage
          
      - name: Configure CMake
        run: cmake . -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
       
      - name: Build
        run: make
          
      - name: Package Dependencies
        run: |
          mkdir AppDir
          mkdir ./AppDir/bin
          mkdir ./AppDir/lib
          mkdir ./AppDir/share
          mkdir ./AppDir/share/applications
          mkdir ./AppDir/share/icons
          mkdir ./AppDir/share/icons/foo
          mkdir ./AppDir/share/icons/foo/256
          touch ./AppDir/share/icons/foo/256/foo.png
          echo -e '[Desktop Entry]\nType=Application\nName=lunar-client-qt\nComment=lunar client qt\nExec=lunar-client-qt\nIcon=foo\nCategories=Game;' > ./AppDir/share/applications/lunar-client-qt.desktop
          mv lunar-client-qt AppDir/bin/
          ./linuxdeployqt.AppImage ./AppDir/share/applications/lunar-client-qt.desktop -appimage
          rm ./linuxdeployqt.AppImage
          mkdir executablefile
          mv *.AppImage executablefile
        
      - uses: actions/upload-artifact@v2
        with:
          name: linux-appimage
          path: ./executablefile
    
